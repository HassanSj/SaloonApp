{"ast":null,"code":"import { swalClasses } from '../../classes.js';\nimport * as dom from '../../dom/index.js';\nimport { warn } from '../../utils.js';\n\n/**\n * @param {SweetAlert2} instance\n * @param {SweetAlertOptions} params\n */\nexport const renderProgressSteps = (instance, params) => {\n  const progressStepsContainer = dom.getProgressSteps();\n  if (!params.progressSteps || params.progressSteps.length === 0) {\n    dom.hide(progressStepsContainer);\n    return;\n  }\n  dom.show(progressStepsContainer);\n  progressStepsContainer.textContent = '';\n  if (params.currentProgressStep >= params.progressSteps.length) {\n    warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');\n  }\n  params.progressSteps.forEach((step, index) => {\n    const stepEl = createStepElement(step);\n    progressStepsContainer.appendChild(stepEl);\n    if (index === params.currentProgressStep) {\n      dom.addClass(stepEl, swalClasses['active-progress-step']);\n    }\n    if (index !== params.progressSteps.length - 1) {\n      const lineEl = createLineElement(params);\n      progressStepsContainer.appendChild(lineEl);\n    }\n  });\n};\n\n/**\n * @param {string} step\n * @returns {HTMLLIElement}\n */\nconst createStepElement = step => {\n  const stepEl = document.createElement('li');\n  dom.addClass(stepEl, swalClasses['progress-step']);\n  dom.setInnerHtml(stepEl, step);\n  return stepEl;\n};\n\n/**\n * @param {SweetAlertOptions} params\n * @returns {HTMLLIElement}\n */\nconst createLineElement = params => {\n  const lineEl = document.createElement('li');\n  dom.addClass(lineEl, swalClasses['progress-step-line']);\n  if (params.progressStepsDistance) {\n    dom.applyNumericalStyle(lineEl, 'width', params.progressStepsDistance);\n  }\n  return lineEl;\n};","map":{"version":3,"names":["swalClasses","dom","warn","renderProgressSteps","instance","params","progressStepsContainer","getProgressSteps","progressSteps","length","hide","show","textContent","currentProgressStep","forEach","step","index","stepEl","createStepElement","appendChild","addClass","lineEl","createLineElement","document","createElement","setInnerHtml","progressStepsDistance","applyNumericalStyle"],"sources":["D:/Documents/ProgramminStudio/Client/barbieme/node_modules/sweetalert2/src/utils/dom/renderers/renderProgressSteps.js"],"sourcesContent":["import { swalClasses } from '../../classes.js'\nimport * as dom from '../../dom/index.js'\nimport { warn } from '../../utils.js'\n\n/**\n * @param {SweetAlert2} instance\n * @param {SweetAlertOptions} params\n */\nexport const renderProgressSteps = (instance, params) => {\n  const progressStepsContainer = dom.getProgressSteps()\n  if (!params.progressSteps || params.progressSteps.length === 0) {\n    dom.hide(progressStepsContainer)\n    return\n  }\n\n  dom.show(progressStepsContainer)\n  progressStepsContainer.textContent = ''\n  if (params.currentProgressStep >= params.progressSteps.length) {\n    warn(\n      'Invalid currentProgressStep parameter, it should be less than progressSteps.length ' +\n        '(currentProgressStep like JS arrays starts from 0)'\n    )\n  }\n\n  params.progressSteps.forEach((step, index) => {\n    const stepEl = createStepElement(step)\n    progressStepsContainer.appendChild(stepEl)\n    if (index === params.currentProgressStep) {\n      dom.addClass(stepEl, swalClasses['active-progress-step'])\n    }\n\n    if (index !== params.progressSteps.length - 1) {\n      const lineEl = createLineElement(params)\n      progressStepsContainer.appendChild(lineEl)\n    }\n  })\n}\n\n/**\n * @param {string} step\n * @returns {HTMLLIElement}\n */\nconst createStepElement = (step) => {\n  const stepEl = document.createElement('li')\n  dom.addClass(stepEl, swalClasses['progress-step'])\n  dom.setInnerHtml(stepEl, step)\n  return stepEl\n}\n\n/**\n * @param {SweetAlertOptions} params\n * @returns {HTMLLIElement}\n */\nconst createLineElement = (params) => {\n  const lineEl = document.createElement('li')\n  dom.addClass(lineEl, swalClasses['progress-step-line'])\n  if (params.progressStepsDistance) {\n    dom.applyNumericalStyle(lineEl, 'width', params.progressStepsDistance)\n  }\n  return lineEl\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,KAAKC,GAAG,MAAM,oBAAoB;AACzC,SAASC,IAAI,QAAQ,gBAAgB;;AAErC;AACA;AACA;AACA;AACA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,QAAQ,EAAEC,MAAM,KAAK;EACvD,MAAMC,sBAAsB,GAAGL,GAAG,CAACM,gBAAgB,EAAE;EACrD,IAAI,CAACF,MAAM,CAACG,aAAa,IAAIH,MAAM,CAACG,aAAa,CAACC,MAAM,KAAK,CAAC,EAAE;IAC9DR,GAAG,CAACS,IAAI,CAACJ,sBAAsB,CAAC;IAChC;EACF;EAEAL,GAAG,CAACU,IAAI,CAACL,sBAAsB,CAAC;EAChCA,sBAAsB,CAACM,WAAW,GAAG,EAAE;EACvC,IAAIP,MAAM,CAACQ,mBAAmB,IAAIR,MAAM,CAACG,aAAa,CAACC,MAAM,EAAE;IAC7DP,IAAI,CACF,qFAAqF,GACnF,oDAAoD,CACvD;EACH;EAEAG,MAAM,CAACG,aAAa,CAACM,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC5C,MAAMC,MAAM,GAAGC,iBAAiB,CAACH,IAAI,CAAC;IACtCT,sBAAsB,CAACa,WAAW,CAACF,MAAM,CAAC;IAC1C,IAAID,KAAK,KAAKX,MAAM,CAACQ,mBAAmB,EAAE;MACxCZ,GAAG,CAACmB,QAAQ,CAACH,MAAM,EAAEjB,WAAW,CAAC,sBAAsB,CAAC,CAAC;IAC3D;IAEA,IAAIgB,KAAK,KAAKX,MAAM,CAACG,aAAa,CAACC,MAAM,GAAG,CAAC,EAAE;MAC7C,MAAMY,MAAM,GAAGC,iBAAiB,CAACjB,MAAM,CAAC;MACxCC,sBAAsB,CAACa,WAAW,CAACE,MAAM,CAAC;IAC5C;EACF,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMH,iBAAiB,GAAIH,IAAI,IAAK;EAClC,MAAME,MAAM,GAAGM,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;EAC3CvB,GAAG,CAACmB,QAAQ,CAACH,MAAM,EAAEjB,WAAW,CAAC,eAAe,CAAC,CAAC;EAClDC,GAAG,CAACwB,YAAY,CAACR,MAAM,EAAEF,IAAI,CAAC;EAC9B,OAAOE,MAAM;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMK,iBAAiB,GAAIjB,MAAM,IAAK;EACpC,MAAMgB,MAAM,GAAGE,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;EAC3CvB,GAAG,CAACmB,QAAQ,CAACC,MAAM,EAAErB,WAAW,CAAC,oBAAoB,CAAC,CAAC;EACvD,IAAIK,MAAM,CAACqB,qBAAqB,EAAE;IAChCzB,GAAG,CAAC0B,mBAAmB,CAACN,MAAM,EAAE,OAAO,EAAEhB,MAAM,CAACqB,qBAAqB,CAAC;EACxE;EACA,OAAOL,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}