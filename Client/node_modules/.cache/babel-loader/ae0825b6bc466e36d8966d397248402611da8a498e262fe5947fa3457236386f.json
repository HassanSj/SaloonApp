{"ast":null,"code":"import { swalClasses } from '../../classes.js';\nimport * as dom from '../../dom/index.js';\n\n/**\n * @param {SweetAlert2} instance\n * @param {SweetAlertOptions} params\n */\nexport const renderPopup = (instance, params) => {\n  const container = dom.getContainer();\n  const popup = dom.getPopup();\n\n  // Width\n  // https://github.com/sweetalert2/sweetalert2/issues/2170\n  if (params.toast) {\n    dom.applyNumericalStyle(container, 'width', params.width);\n    popup.style.width = '100%';\n    popup.insertBefore(dom.getLoader(), dom.getIcon());\n  } else {\n    dom.applyNumericalStyle(popup, 'width', params.width);\n  }\n\n  // Padding\n  dom.applyNumericalStyle(popup, 'padding', params.padding);\n\n  // Color\n  if (params.color) {\n    popup.style.color = params.color;\n  }\n\n  // Background\n  if (params.background) {\n    popup.style.background = params.background;\n  }\n  dom.hide(dom.getValidationMessage());\n\n  // Classes\n  addClasses(popup, params);\n};\n\n/**\n * @param {HTMLElement} popup\n * @param {SweetAlertOptions} params\n */\nconst addClasses = (popup, params) => {\n  // Default Class + showClass when updating Swal.update({})\n  popup.className = `${swalClasses.popup} ${dom.isVisible(popup) ? params.showClass.popup : ''}`;\n  if (params.toast) {\n    dom.addClass([document.documentElement, document.body], swalClasses['toast-shown']);\n    dom.addClass(popup, swalClasses.toast);\n  } else {\n    dom.addClass(popup, swalClasses.modal);\n  }\n\n  // Custom class\n  dom.applyCustomClass(popup, params, 'popup');\n  if (typeof params.customClass === 'string') {\n    dom.addClass(popup, params.customClass);\n  }\n\n  // Icon class (#1842)\n  if (params.icon) {\n    dom.addClass(popup, swalClasses[`icon-${params.icon}`]);\n  }\n};","map":{"version":3,"names":["swalClasses","dom","renderPopup","instance","params","container","getContainer","popup","getPopup","toast","applyNumericalStyle","width","style","insertBefore","getLoader","getIcon","padding","color","background","hide","getValidationMessage","addClasses","className","isVisible","showClass","addClass","document","documentElement","body","modal","applyCustomClass","customClass","icon"],"sources":["D:/Documents/ProgramminStudio/Client/barbieme/node_modules/sweetalert2/src/utils/dom/renderers/renderPopup.js"],"sourcesContent":["import { swalClasses } from '../../classes.js'\nimport * as dom from '../../dom/index.js'\n\n/**\n * @param {SweetAlert2} instance\n * @param {SweetAlertOptions} params\n */\nexport const renderPopup = (instance, params) => {\n  const container = dom.getContainer()\n  const popup = dom.getPopup()\n\n  // Width\n  // https://github.com/sweetalert2/sweetalert2/issues/2170\n  if (params.toast) {\n    dom.applyNumericalStyle(container, 'width', params.width)\n    popup.style.width = '100%'\n    popup.insertBefore(dom.getLoader(), dom.getIcon())\n  } else {\n    dom.applyNumericalStyle(popup, 'width', params.width)\n  }\n\n  // Padding\n  dom.applyNumericalStyle(popup, 'padding', params.padding)\n\n  // Color\n  if (params.color) {\n    popup.style.color = params.color\n  }\n\n  // Background\n  if (params.background) {\n    popup.style.background = params.background\n  }\n\n  dom.hide(dom.getValidationMessage())\n\n  // Classes\n  addClasses(popup, params)\n}\n\n/**\n * @param {HTMLElement} popup\n * @param {SweetAlertOptions} params\n */\nconst addClasses = (popup, params) => {\n  // Default Class + showClass when updating Swal.update({})\n  popup.className = `${swalClasses.popup} ${dom.isVisible(popup) ? params.showClass.popup : ''}`\n\n  if (params.toast) {\n    dom.addClass([document.documentElement, document.body], swalClasses['toast-shown'])\n    dom.addClass(popup, swalClasses.toast)\n  } else {\n    dom.addClass(popup, swalClasses.modal)\n  }\n\n  // Custom class\n  dom.applyCustomClass(popup, params, 'popup')\n  if (typeof params.customClass === 'string') {\n    dom.addClass(popup, params.customClass)\n  }\n\n  // Icon class (#1842)\n  if (params.icon) {\n    dom.addClass(popup, swalClasses[`icon-${params.icon}`])\n  }\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,KAAKC,GAAG,MAAM,oBAAoB;;AAEzC;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAG,CAACC,QAAQ,EAAEC,MAAM,KAAK;EAC/C,MAAMC,SAAS,GAAGJ,GAAG,CAACK,YAAY,EAAE;EACpC,MAAMC,KAAK,GAAGN,GAAG,CAACO,QAAQ,EAAE;;EAE5B;EACA;EACA,IAAIJ,MAAM,CAACK,KAAK,EAAE;IAChBR,GAAG,CAACS,mBAAmB,CAACL,SAAS,EAAE,OAAO,EAAED,MAAM,CAACO,KAAK,CAAC;IACzDJ,KAAK,CAACK,KAAK,CAACD,KAAK,GAAG,MAAM;IAC1BJ,KAAK,CAACM,YAAY,CAACZ,GAAG,CAACa,SAAS,EAAE,EAAEb,GAAG,CAACc,OAAO,EAAE,CAAC;EACpD,CAAC,MAAM;IACLd,GAAG,CAACS,mBAAmB,CAACH,KAAK,EAAE,OAAO,EAAEH,MAAM,CAACO,KAAK,CAAC;EACvD;;EAEA;EACAV,GAAG,CAACS,mBAAmB,CAACH,KAAK,EAAE,SAAS,EAAEH,MAAM,CAACY,OAAO,CAAC;;EAEzD;EACA,IAAIZ,MAAM,CAACa,KAAK,EAAE;IAChBV,KAAK,CAACK,KAAK,CAACK,KAAK,GAAGb,MAAM,CAACa,KAAK;EAClC;;EAEA;EACA,IAAIb,MAAM,CAACc,UAAU,EAAE;IACrBX,KAAK,CAACK,KAAK,CAACM,UAAU,GAAGd,MAAM,CAACc,UAAU;EAC5C;EAEAjB,GAAG,CAACkB,IAAI,CAAClB,GAAG,CAACmB,oBAAoB,EAAE,CAAC;;EAEpC;EACAC,UAAU,CAACd,KAAK,EAAEH,MAAM,CAAC;AAC3B,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMiB,UAAU,GAAG,CAACd,KAAK,EAAEH,MAAM,KAAK;EACpC;EACAG,KAAK,CAACe,SAAS,GAAI,GAAEtB,WAAW,CAACO,KAAM,IAAGN,GAAG,CAACsB,SAAS,CAAChB,KAAK,CAAC,GAAGH,MAAM,CAACoB,SAAS,CAACjB,KAAK,GAAG,EAAG,EAAC;EAE9F,IAAIH,MAAM,CAACK,KAAK,EAAE;IAChBR,GAAG,CAACwB,QAAQ,CAAC,CAACC,QAAQ,CAACC,eAAe,EAAED,QAAQ,CAACE,IAAI,CAAC,EAAE5B,WAAW,CAAC,aAAa,CAAC,CAAC;IACnFC,GAAG,CAACwB,QAAQ,CAAClB,KAAK,EAAEP,WAAW,CAACS,KAAK,CAAC;EACxC,CAAC,MAAM;IACLR,GAAG,CAACwB,QAAQ,CAAClB,KAAK,EAAEP,WAAW,CAAC6B,KAAK,CAAC;EACxC;;EAEA;EACA5B,GAAG,CAAC6B,gBAAgB,CAACvB,KAAK,EAAEH,MAAM,EAAE,OAAO,CAAC;EAC5C,IAAI,OAAOA,MAAM,CAAC2B,WAAW,KAAK,QAAQ,EAAE;IAC1C9B,GAAG,CAACwB,QAAQ,CAAClB,KAAK,EAAEH,MAAM,CAAC2B,WAAW,CAAC;EACzC;;EAEA;EACA,IAAI3B,MAAM,CAAC4B,IAAI,EAAE;IACf/B,GAAG,CAACwB,QAAQ,CAAClB,KAAK,EAAEP,WAAW,CAAE,QAAOI,MAAM,CAAC4B,IAAK,EAAC,CAAC,CAAC;EACzD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}