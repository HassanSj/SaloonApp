{"ast":null,"code":"import privateProps from '../../../privateProps.js';\nimport { iconTypes, swalClasses } from '../../classes.js';\nimport * as dom from '../../dom/index.js';\nimport { error } from '../../utils.js';\n\n/**\n * @param {SweetAlert2} instance\n * @param {SweetAlertOptions} params\n */\nexport const renderIcon = (instance, params) => {\n  const innerParams = privateProps.innerParams.get(instance);\n  const icon = dom.getIcon();\n\n  // if the given icon already rendered, apply the styling without re-rendering the icon\n  if (innerParams && params.icon === innerParams.icon) {\n    // Custom or default content\n    setContent(icon, params);\n    applyStyles(icon, params);\n    return;\n  }\n  if (!params.icon && !params.iconHtml) {\n    dom.hide(icon);\n    return;\n  }\n  if (params.icon && Object.keys(iconTypes).indexOf(params.icon) === -1) {\n    error(`Unknown icon! Expected \"success\", \"error\", \"warning\", \"info\" or \"question\", got \"${params.icon}\"`);\n    dom.hide(icon);\n    return;\n  }\n  dom.show(icon);\n\n  // Custom or default content\n  setContent(icon, params);\n  applyStyles(icon, params);\n\n  // Animate icon\n  dom.addClass(icon, params.showClass.icon);\n};\n\n/**\n * @param {HTMLElement} icon\n * @param {SweetAlertOptions} params\n */\nconst applyStyles = (icon, params) => {\n  for (const iconType in iconTypes) {\n    if (params.icon !== iconType) {\n      dom.removeClass(icon, iconTypes[iconType]);\n    }\n  }\n  dom.addClass(icon, iconTypes[params.icon]);\n\n  // Icon color\n  setColor(icon, params);\n\n  // Success icon background color\n  adjustSuccessIconBackgroundColor();\n\n  // Custom class\n  dom.applyCustomClass(icon, params, 'icon');\n};\n\n// Adjust success icon background color to match the popup background color\nconst adjustSuccessIconBackgroundColor = () => {\n  const popup = dom.getPopup();\n  const popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');\n  /** @type {NodeListOf<HTMLElement>} */\n  const successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');\n  for (let i = 0; i < successIconParts.length; i++) {\n    successIconParts[i].style.backgroundColor = popupBackgroundColor;\n  }\n};\nconst successIconHtml = `\n  <div class=\"swal2-success-circular-line-left\"></div>\n  <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\n  <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\n  <div class=\"swal2-success-circular-line-right\"></div>\n`;\nconst errorIconHtml = `\n  <span class=\"swal2-x-mark\">\n    <span class=\"swal2-x-mark-line-left\"></span>\n    <span class=\"swal2-x-mark-line-right\"></span>\n  </span>\n`;\n\n/**\n * @param {HTMLElement} icon\n * @param {SweetAlertOptions} params\n */\nconst setContent = (icon, params) => {\n  let oldContent = icon.innerHTML;\n  let newContent;\n  if (params.iconHtml) {\n    newContent = iconContent(params.iconHtml);\n  } else if (params.icon === 'success') {\n    newContent = successIconHtml;\n    oldContent = oldContent.replace(/ style=\".*?\"/g, ''); // undo adjustSuccessIconBackgroundColor()\n  } else if (params.icon === 'error') {\n    newContent = errorIconHtml;\n  } else {\n    const defaultIconHtml = {\n      question: '?',\n      warning: '!',\n      info: 'i'\n    };\n    newContent = iconContent(defaultIconHtml[params.icon]);\n  }\n  if (oldContent.trim() !== newContent.trim()) {\n    dom.setInnerHtml(icon, newContent);\n  }\n};\n\n/**\n * @param {HTMLElement} icon\n * @param {SweetAlertOptions} params\n */\nconst setColor = (icon, params) => {\n  if (!params.iconColor) {\n    return;\n  }\n  icon.style.color = params.iconColor;\n  icon.style.borderColor = params.iconColor;\n  for (const sel of ['.swal2-success-line-tip', '.swal2-success-line-long', '.swal2-x-mark-line-left', '.swal2-x-mark-line-right']) {\n    dom.setStyle(icon, sel, 'backgroundColor', params.iconColor);\n  }\n  dom.setStyle(icon, '.swal2-success-ring', 'borderColor', params.iconColor);\n};\n\n/**\n * @param {string} content\n * @returns {string}\n */\nconst iconContent = content => `<div class=\"${swalClasses['icon-content']}\">${content}</div>`;","map":{"version":3,"names":["privateProps","iconTypes","swalClasses","dom","error","renderIcon","instance","params","innerParams","get","icon","getIcon","setContent","applyStyles","iconHtml","hide","Object","keys","indexOf","show","addClass","showClass","iconType","removeClass","setColor","adjustSuccessIconBackgroundColor","applyCustomClass","popup","getPopup","popupBackgroundColor","window","getComputedStyle","getPropertyValue","successIconParts","querySelectorAll","i","length","style","backgroundColor","successIconHtml","errorIconHtml","oldContent","innerHTML","newContent","iconContent","replace","defaultIconHtml","question","warning","info","trim","setInnerHtml","iconColor","color","borderColor","sel","setStyle","content"],"sources":["D:/Documents/ProgramminStudio/Client/barbieme/node_modules/sweetalert2/src/utils/dom/renderers/renderIcon.js"],"sourcesContent":["import privateProps from '../../../privateProps.js'\nimport { iconTypes, swalClasses } from '../../classes.js'\nimport * as dom from '../../dom/index.js'\nimport { error } from '../../utils.js'\n\n/**\n * @param {SweetAlert2} instance\n * @param {SweetAlertOptions} params\n */\nexport const renderIcon = (instance, params) => {\n  const innerParams = privateProps.innerParams.get(instance)\n  const icon = dom.getIcon()\n\n  // if the given icon already rendered, apply the styling without re-rendering the icon\n  if (innerParams && params.icon === innerParams.icon) {\n    // Custom or default content\n    setContent(icon, params)\n\n    applyStyles(icon, params)\n    return\n  }\n\n  if (!params.icon && !params.iconHtml) {\n    dom.hide(icon)\n    return\n  }\n\n  if (params.icon && Object.keys(iconTypes).indexOf(params.icon) === -1) {\n    error(`Unknown icon! Expected \"success\", \"error\", \"warning\", \"info\" or \"question\", got \"${params.icon}\"`)\n    dom.hide(icon)\n    return\n  }\n\n  dom.show(icon)\n\n  // Custom or default content\n  setContent(icon, params)\n\n  applyStyles(icon, params)\n\n  // Animate icon\n  dom.addClass(icon, params.showClass.icon)\n}\n\n/**\n * @param {HTMLElement} icon\n * @param {SweetAlertOptions} params\n */\nconst applyStyles = (icon, params) => {\n  for (const iconType in iconTypes) {\n    if (params.icon !== iconType) {\n      dom.removeClass(icon, iconTypes[iconType])\n    }\n  }\n  dom.addClass(icon, iconTypes[params.icon])\n\n  // Icon color\n  setColor(icon, params)\n\n  // Success icon background color\n  adjustSuccessIconBackgroundColor()\n\n  // Custom class\n  dom.applyCustomClass(icon, params, 'icon')\n}\n\n// Adjust success icon background color to match the popup background color\nconst adjustSuccessIconBackgroundColor = () => {\n  const popup = dom.getPopup()\n  const popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color')\n  /** @type {NodeListOf<HTMLElement>} */\n  const successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix')\n  for (let i = 0; i < successIconParts.length; i++) {\n    successIconParts[i].style.backgroundColor = popupBackgroundColor\n  }\n}\n\nconst successIconHtml = `\n  <div class=\"swal2-success-circular-line-left\"></div>\n  <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\n  <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\n  <div class=\"swal2-success-circular-line-right\"></div>\n`\n\nconst errorIconHtml = `\n  <span class=\"swal2-x-mark\">\n    <span class=\"swal2-x-mark-line-left\"></span>\n    <span class=\"swal2-x-mark-line-right\"></span>\n  </span>\n`\n\n/**\n * @param {HTMLElement} icon\n * @param {SweetAlertOptions} params\n */\nconst setContent = (icon, params) => {\n  let oldContent = icon.innerHTML\n  let newContent\n  if (params.iconHtml) {\n    newContent = iconContent(params.iconHtml)\n  } else if (params.icon === 'success') {\n    newContent = successIconHtml\n    oldContent = oldContent.replace(/ style=\".*?\"/g, '') // undo adjustSuccessIconBackgroundColor()\n  } else if (params.icon === 'error') {\n    newContent = errorIconHtml\n  } else {\n    const defaultIconHtml = {\n      question: '?',\n      warning: '!',\n      info: 'i',\n    }\n    newContent = iconContent(defaultIconHtml[params.icon])\n  }\n\n  if (oldContent.trim() !== newContent.trim()) {\n    dom.setInnerHtml(icon, newContent)\n  }\n}\n\n/**\n * @param {HTMLElement} icon\n * @param {SweetAlertOptions} params\n */\nconst setColor = (icon, params) => {\n  if (!params.iconColor) {\n    return\n  }\n  icon.style.color = params.iconColor\n  icon.style.borderColor = params.iconColor\n  for (const sel of [\n    '.swal2-success-line-tip',\n    '.swal2-success-line-long',\n    '.swal2-x-mark-line-left',\n    '.swal2-x-mark-line-right',\n  ]) {\n    dom.setStyle(icon, sel, 'backgroundColor', params.iconColor)\n  }\n  dom.setStyle(icon, '.swal2-success-ring', 'borderColor', params.iconColor)\n}\n\n/**\n * @param {string} content\n * @returns {string}\n */\nconst iconContent = (content) => `<div class=\"${swalClasses['icon-content']}\">${content}</div>`\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}