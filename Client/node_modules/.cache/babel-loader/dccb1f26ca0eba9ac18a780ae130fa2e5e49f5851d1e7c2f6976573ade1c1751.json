{"ast":null,"code":"/**\n * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n * This is the approach that Babel will probably take to implement private methods/fields\n *   https://github.com/tc39/proposal-private-methods\n *   https://github.com/babel/babel/pull/7555\n * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n *   then we can use that language feature.\n */\n\nexport default {\n  awaitingPromise: new WeakMap(),\n  promise: new WeakMap(),\n  innerParams: new WeakMap(),\n  domCache: new WeakMap()\n};","map":{"version":3,"names":["awaitingPromise","WeakMap","promise","innerParams","domCache"],"sources":["D:/Documents/ProgramminStudio/Client/barbieme/node_modules/sweetalert2/src/privateProps.js"],"sourcesContent":["/**\n * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n * This is the approach that Babel will probably take to implement private methods/fields\n *   https://github.com/tc39/proposal-private-methods\n *   https://github.com/babel/babel/pull/7555\n * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n *   then we can use that language feature.\n */\n\nexport default {\n  awaitingPromise: new WeakMap(),\n  promise: new WeakMap(),\n  innerParams: new WeakMap(),\n  domCache: new WeakMap(),\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;EACbA,eAAe,EAAE,IAAIC,OAAO,EAAE;EAC9BC,OAAO,EAAE,IAAID,OAAO,EAAE;EACtBE,WAAW,EAAE,IAAIF,OAAO,EAAE;EAC1BG,QAAQ,EAAE,IAAIH,OAAO;AACvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}