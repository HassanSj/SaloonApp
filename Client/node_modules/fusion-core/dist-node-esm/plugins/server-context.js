/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
import uuidv4 from 'uuid/v4';
import UAParser from 'ua-parser-js';
import getEnv from '../get-env.js';
const envVars = getEnv();
export default function middleware(ctx, next) {
  // env vars
  ctx.rootDir = envVars.rootDir;
  ctx.env = envVars.env;
  ctx.prefix = envVars.prefix;
  ctx.assetPath = envVars.assetPath;
  ctx.cdnUrl = envVars.cdnUrl; // webpack-related things

  ctx.preloadChunks = [];
  ctx.webpackPublicPath = ctx.webpackPublicPath || envVars.cdnUrl || envVars.assetPath; // these are set by fusion-cli, however since fusion-cli plugins are not added when
  // running simulation tests, it is good to default them here

  ctx.syncChunks = ctx.syncChunks || [];
  ctx.chunkUrlMap = ctx.chunkUrlMap || new Map(); // fusion-specific things

  ctx.nonce = uuidv4();
  ctx.useragent = new UAParser(ctx.headers['user-agent']).getResult();
  ctx.element = null;
  ctx.rendered = null;
  ctx.postPrepareEffects = [];
  ctx.universalValues = {};
  return next();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9wbHVnaW5zL3NlcnZlci1jb250ZXh0LmpzIl0sIm5hbWVzIjpbInV1aWR2NCIsIlVBUGFyc2VyIiwiZ2V0RW52IiwiZW52VmFycyIsIm1pZGRsZXdhcmUiLCJjdHgiLCJuZXh0Iiwicm9vdERpciIsImVudiIsInByZWZpeCIsImFzc2V0UGF0aCIsImNkblVybCIsInByZWxvYWRDaHVua3MiLCJ3ZWJwYWNrUHVibGljUGF0aCIsInN5bmNDaHVua3MiLCJjaHVua1VybE1hcCIsIk1hcCIsIm5vbmNlIiwidXNlcmFnZW50IiwiaGVhZGVycyIsImdldFJlc3VsdCIsImVsZW1lbnQiLCJyZW5kZXJlZCIsInBvc3RQcmVwYXJlRWZmZWN0cyIsInVuaXZlcnNhbFZhbHVlcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxPQUFPQSxNQUFQLE1BQW1CLFNBQW5CO0FBQ0EsT0FBT0MsUUFBUCxNQUFxQixjQUFyQjtBQUNBLE9BQU9DLE1BQVAsTUFBbUIsZUFBbkI7QUFFQSxNQUFNQyxPQUFPLEdBQUdELE1BQU0sRUFBdEI7QUFFQSxlQUFlLFNBQVNFLFVBQVQsQ0FBb0JDLEdBQXBCLEVBQXlCQyxJQUF6QixFQUErQjtBQUM1QztBQUNBRCxFQUFBQSxHQUFHLENBQUNFLE9BQUosR0FBY0osT0FBTyxDQUFDSSxPQUF0QjtBQUNBRixFQUFBQSxHQUFHLENBQUNHLEdBQUosR0FBVUwsT0FBTyxDQUFDSyxHQUFsQjtBQUNBSCxFQUFBQSxHQUFHLENBQUNJLE1BQUosR0FBYU4sT0FBTyxDQUFDTSxNQUFyQjtBQUNBSixFQUFBQSxHQUFHLENBQUNLLFNBQUosR0FBZ0JQLE9BQU8sQ0FBQ08sU0FBeEI7QUFDQUwsRUFBQUEsR0FBRyxDQUFDTSxNQUFKLEdBQWFSLE9BQU8sQ0FBQ1EsTUFBckIsQ0FONEMsQ0FRNUM7O0FBQ0FOLEVBQUFBLEdBQUcsQ0FBQ08sYUFBSixHQUFvQixFQUFwQjtBQUNBUCxFQUFBQSxHQUFHLENBQUNRLGlCQUFKLEdBQ0VSLEdBQUcsQ0FBQ1EsaUJBQUosSUFBeUJWLE9BQU8sQ0FBQ1EsTUFBakMsSUFBMkNSLE9BQU8sQ0FBQ08sU0FEckQsQ0FWNEMsQ0FhNUM7QUFDQTs7QUFDQUwsRUFBQUEsR0FBRyxDQUFDUyxVQUFKLEdBQWlCVCxHQUFHLENBQUNTLFVBQUosSUFBa0IsRUFBbkM7QUFDQVQsRUFBQUEsR0FBRyxDQUFDVSxXQUFKLEdBQWtCVixHQUFHLENBQUNVLFdBQUosSUFBbUIsSUFBSUMsR0FBSixFQUFyQyxDQWhCNEMsQ0FrQjVDOztBQUNBWCxFQUFBQSxHQUFHLENBQUNZLEtBQUosR0FBWWpCLE1BQU0sRUFBbEI7QUFDQUssRUFBQUEsR0FBRyxDQUFDYSxTQUFKLEdBQWdCLElBQUlqQixRQUFKLENBQWFJLEdBQUcsQ0FBQ2MsT0FBSixDQUFZLFlBQVosQ0FBYixFQUF3Q0MsU0FBeEMsRUFBaEI7QUFDQWYsRUFBQUEsR0FBRyxDQUFDZ0IsT0FBSixHQUFjLElBQWQ7QUFDQWhCLEVBQUFBLEdBQUcsQ0FBQ2lCLFFBQUosR0FBZSxJQUFmO0FBQ0FqQixFQUFBQSxHQUFHLENBQUNrQixrQkFBSixHQUF5QixFQUF6QjtBQUNBbEIsRUFBQUEsR0FBRyxDQUFDbUIsZUFBSixHQUFzQixFQUF0QjtBQUVBLFNBQU9sQixJQUFJLEVBQVg7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBDb3B5cmlnaHQgKGMpIDIwMTggVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAbm9mbG93XG4gKi9cblxuaW1wb3J0IHV1aWR2NCBmcm9tICd1dWlkL3Y0JztcbmltcG9ydCBVQVBhcnNlciBmcm9tICd1YS1wYXJzZXItanMnO1xuaW1wb3J0IGdldEVudiBmcm9tICcuLi9nZXQtZW52LmpzJztcblxuY29uc3QgZW52VmFycyA9IGdldEVudigpO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtaWRkbGV3YXJlKGN0eCwgbmV4dCkge1xuICAvLyBlbnYgdmFyc1xuICBjdHgucm9vdERpciA9IGVudlZhcnMucm9vdERpcjtcbiAgY3R4LmVudiA9IGVudlZhcnMuZW52O1xuICBjdHgucHJlZml4ID0gZW52VmFycy5wcmVmaXg7XG4gIGN0eC5hc3NldFBhdGggPSBlbnZWYXJzLmFzc2V0UGF0aDtcbiAgY3R4LmNkblVybCA9IGVudlZhcnMuY2RuVXJsO1xuXG4gIC8vIHdlYnBhY2stcmVsYXRlZCB0aGluZ3NcbiAgY3R4LnByZWxvYWRDaHVua3MgPSBbXTtcbiAgY3R4LndlYnBhY2tQdWJsaWNQYXRoID1cbiAgICBjdHgud2VicGFja1B1YmxpY1BhdGggfHwgZW52VmFycy5jZG5VcmwgfHwgZW52VmFycy5hc3NldFBhdGg7XG5cbiAgLy8gdGhlc2UgYXJlIHNldCBieSBmdXNpb24tY2xpLCBob3dldmVyIHNpbmNlIGZ1c2lvbi1jbGkgcGx1Z2lucyBhcmUgbm90IGFkZGVkIHdoZW5cbiAgLy8gcnVubmluZyBzaW11bGF0aW9uIHRlc3RzLCBpdCBpcyBnb29kIHRvIGRlZmF1bHQgdGhlbSBoZXJlXG4gIGN0eC5zeW5jQ2h1bmtzID0gY3R4LnN5bmNDaHVua3MgfHwgW107XG4gIGN0eC5jaHVua1VybE1hcCA9IGN0eC5jaHVua1VybE1hcCB8fCBuZXcgTWFwKCk7XG5cbiAgLy8gZnVzaW9uLXNwZWNpZmljIHRoaW5nc1xuICBjdHgubm9uY2UgPSB1dWlkdjQoKTtcbiAgY3R4LnVzZXJhZ2VudCA9IG5ldyBVQVBhcnNlcihjdHguaGVhZGVyc1sndXNlci1hZ2VudCddKS5nZXRSZXN1bHQoKTtcbiAgY3R4LmVsZW1lbnQgPSBudWxsO1xuICBjdHgucmVuZGVyZWQgPSBudWxsO1xuICBjdHgucG9zdFByZXBhcmVFZmZlY3RzID0gW107XG4gIGN0eC51bml2ZXJzYWxWYWx1ZXMgPSB7fTtcblxuICByZXR1cm4gbmV4dCgpO1xufVxuIl19